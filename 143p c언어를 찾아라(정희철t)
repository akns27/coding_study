#include <stdio.h>
#include <string.h>

int main() {
  char S[101];
  int i, c = 0, cc = 0;

  printf("문자열을 입력하세요: ");
  scanf("%s", S);

  for (i = 0; S[i] != '\0'; i++) {
    if (S[i] == 'c' || S[i] == 'C') {
      c++;
      if (S[i + 1] == 'c' || S[i + 1] == 'C')
        cc++;
    }
  }

  printf("c의 개수는: %d\n", c);
  printf("CC의 개수는: %d\n", cc);

  return 0;
}
/*
라이브러리 포함:

#include <stdio.h>: 표준 입출력 함수를 사용하기 위해 stdio.h 헤더 파일을 포함합니다.
#include <string.h>: 문자열 처리 함수를 사용하기 위해 string.h 헤더 파일을 포함합니다.
main 함수:

int main(): 프로그램의 진입점입니다. main 함수는 int형을 반환하므로 int으로 선언됩니다.
변수 선언:

char S[101];: 문자열을 저장하기 위한 문자 배열 S를 선언합니다. 최대 길이가 100인 문자열을 저장할 수 있습니다.
int i, c = 0, cc = 0;: 반복문에서 사용할 변수 i, 문자 'c'의 개수를 저장할 변수 c, 'cc'의 개수를 저장할 변수 cc를 선언하고 초기값을 0으로 설정합니다.
문자열 입력:

printf("문자열을 입력하세요: ");: 사용자에게 문자열 입력을 안내하는 메시지를 출력합니다.
scanf("%s", S);: 사용자로부터 문자열을 입력받아 S 배열에 저장합니다. (%s는 공백을 제외한 문자열을 입력받는 서식 지정자입니다.)
문자열 순회 및 개수 세기:

for 반복문을 사용하여 문자열 S의 각 문자를 순회합니다. 반복은 널 종료 문자 '\0'가 나타날 때까지 진행됩니다.
if (S[i] == 'c' || S[i] == 'C'): 현재 문자 S[i]가 'c' 또는 'C'인지 확인합니다.
c++: 'c' 또는 'C'를 발견하면 c 변수를 증가시킵니다.
if (S[i + 1] == 'c' || S[i + 1] == 'C') cc++;: 현재 문자의 다음 문자가 'c' 또는 'C'인지 확인하여 cc 변수를 증가시킵니다.
결과 출력:

printf("c의 개수는: %d\n", c);: 문자열에서 발견된 'c'의 개수를 출력합니다.
printf("CC의 개수는: %d\n", cc);: 문자열에서 발견된 'cc'의 개수를 출력합니다.
반환 값:

return 0;: main 함수의 반환 값으로 0을 사용하여 프로그램이 정상적으로 종료됨을 나타냅니다.
*/
